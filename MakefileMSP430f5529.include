PROJECT ?= main
PORT ?= /dev/ttyACM1

# Project settings
MCU = msp430f5529
HOME_PATH = /home/wenwen
TI_PATH = $(HOME_PATH)/ti
MSP_PATH = $(TI_PATH)/gcc3.4.5.1
TOOL_PATH = $(MSP_PATH)/bin
GCC_LIBRARY_PATH = $(MSP_PATH)/include
GCC_INCLUDE_PATH = $(GCC_LIBRARY_PATH)
GCC_LIBMSP_PATH = $(TI_PATH)/MSPDebugStack_OS_Package
#----------------------------------------------------------
# compiler suite
CC = $(TOOL_PATH)/msp430-elf-gcc
CPP = $(TOOL_PATH)/msp430-elf-c++
OBJCOPY = $(TOOL_PATH)/msp430-elf-objcopy
PROGRAMMER = LD_LIBRARY_PATH=$(GCC_LIBMSP_PATH) mspdebug tilib
SIZE = $(TOOL_PATH)/msp430-elf-size
TERMPROG = picocom
DEBUGGER = $(TOOL_PATH)/msp430-elf-gdb
DEBUGSERVER =  LD_LIBRARY_PATH=$(GCC_LIBMSP_PATH) mspdebug tilib
#----------------------------------------------------------
# Compiler settingsf-objdum
# -mmcu selects the chip type -> specifies instructionset etc.
# -ffunction-sections -fdata-sections are needed to place
#  functions in separate sections, to be able to remove
#  unneeded functions during linking
C_FLAGS += -mmcu=$(MCU) $(INCLUDE_FLAGS) -Os -g
C_FLAGS += -ffunction-sections -fdata-sections
C_FLAGS += -I$(GCC_INCLUDE_PATH)
#----------------------------------------------------------
# Linker settings
LDFLAGS = -Wl,-Map=$(TARGET).map,--cref
# --gc-sections will allow the linker to remove unused sections
LDFLAGS += -Wl,--gc-sections
LDFLAGS += -L$(GCC_LIBRARY_PATH)

PROGRAMMER_FLAGS = "prog $(TARGET).elf"
TERM_FLAGS += $(PORT) -b 115200
DEBUGGER_FLAGS = "file $(TARGET).elf"
#DEBUGGER_FLAGS = "target remote localhost:2000"
DEBUGSERVER_FLAGS = "gdb"
#--------------------------------------------------------------
# rules:
all: directory build size

directory:
	mkdir -p build

# analyze compiled program size:
build: elf

%.o: %.c
	$(CC) -c $(C_FLAGS) $< -o $@

elf: $(PROJECT_OBJS)
	$(CC) $(C_FLAGS) $(LDFLAGS) $(PROJECT_OBJS) -o $(TARGET).elf

# upload the program to the microcontroller flash:
upload:
	$(PROGRAMMER) $(PROGRAMMER_FLAGS)

# analyze compiled program size:
size:
	$(SIZE) $(TARGET).elf

term: 
	$(TERMPROG) $(TERM_FLAGS)

debug:
	$(DEBUGGER) $(DEBUGGER_FLAGS)

debug-server:
	$(DEBUGSERVER) $(DEBUGSERVER_FLAGS)

clean:
	$(RM) $(PROJECT_OBJS)
	$(RM) $(PROJECT_SOBJ)
	$(RM) -rf build
